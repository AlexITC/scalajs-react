package japgolly.scalajs.react.hooks

// DO NOT MANUALLY EDIT
// DO NOT MANUALLY EDIT
//
// THIS IS GENERATED BY RUNNING genHooks IN SBT
//
// DO NOT MANUALLY EDIT
// DO NOT MANUALLY EDIT

// Note: these are never instantiated. They're just here to serve as type lambdas in Scala 2.
sealed trait HookCtxFn { type Fn[A] }

object HookCtxFn {
  sealed trait P1[P, H1] extends HookCtxFn { override type Fn[A] = (P, H1) => A }
  sealed trait P2[P, H1, H2] extends HookCtxFn { override type Fn[A] = (P, H1, H2) => A }
  sealed trait P3[P, H1, H2, H3] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3) => A }
  sealed trait P4[P, H1, H2, H3, H4] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4) => A }
  sealed trait P5[P, H1, H2, H3, H4, H5] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5) => A }
  sealed trait P6[P, H1, H2, H3, H4, H5, H6] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6) => A }
  sealed trait P7[P, H1, H2, H3, H4, H5, H6, H7] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7) => A }
  sealed trait P8[P, H1, H2, H3, H4, H5, H6, H7, H8] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8) => A }
  sealed trait P9[P, H1, H2, H3, H4, H5, H6, H7, H8, H9] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9) => A }
  sealed trait P10[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10) => A }
  sealed trait P11[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11) => A }
  sealed trait P12[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12) => A }
  sealed trait P13[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13) => A }
  sealed trait P14[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14) => A }
  sealed trait P15[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15) => A }
  sealed trait P16[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16) => A }
  sealed trait P17[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17) => A }
  sealed trait P18[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17, H18] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17, H18) => A }
  sealed trait P19[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17, H18, H19] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17, H18, H19) => A }
  sealed trait P20[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17, H18, H19, H20] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17, H18, H19, H20) => A }
  sealed trait P21[P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17, H18, H19, H20, H21] extends HookCtxFn { override type Fn[A] = (P, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, H11, H12, H13, H14, H15, H16, H17, H18, H19, H20, H21) => A }
}
